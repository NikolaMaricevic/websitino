name: Build websitino (linux-static)

on:
  push:
    branches:
      - main

jobs:
  build-and-export:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Docker build
    - name: Build Docker image
      run: |
        echo "commit: ${GITHUB_SHA::7}" > version
        echo "FROM alpine:latest
        RUN apk add vim gcc musl-dev ldc dub llvm-libunwind-static openssl-libs-static gzip upx cmake make
        WORKDIR /app
        COPY . .
        CMD [\"dub\", \"build\", \"--build=release\", \"--config=musl\"]" > Dockerfile
        docker build -t websitino-image .

    # Run the Docker container to build the project
    - name: Run Docker container and build project
      run: |
        docker run --name websitino-container websitino-image || true

    # Copy compiled file from Docker container to host
    - name: Copy compiled binary
      run: |
        docker cp websitino-container:/app/websitino .
        docker rm websitino-container
        strip -s websitino

    # Upload the binary as an artifact
    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: websitino
        path: websitino

    # Prepara la directory per GitHub Pages
    - name: Prepara directory per GitHub Pages
      run: |
        mkdir -p public
        cp websitino public/
        echo "Websitino nightly build" > public/index.html
        echo "Download: <a href='websitino'>websitino</a>" >> public/index.html
        echo "Build date: $(date)" >> public/index.html
        echo "Commit: ${GITHUB_SHA::7}" >> public/index.html

    # Pubblica su GitHub Pages
    - name: Deploy su GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        force_orphan: true